spring:
  application:
    name: marketplace
  datasource:
    hikari:
      maximum-pool-size: 10 # Adjust based on your load
  servlet:
    multipart:
      max-file-size: 10MB # Adjust based on your needs
      max-request-size: 10MB # Adjust based on your needs

  profiles:
    active: local

  mail:
    host: smtp.gmail.com
    port: 587 # Use 465 for SSL if preferred, but TLS is generally recommended
#    username: ***** # Replace with your actual Gmail address
#    password: ***** # Replace with your actual Gmail password or an App Password if 2FA is enabled
    properties:
      mail:
        transport:
          protocol: smtp
        smtp:
          auth: true
          starttls:
            enable: true # for TLS
        debug: true
          # socketFactory:
          #   class: javax.net.ssl.SSLSocketFactory # for SSL (uncomment if using port 465)
          #   port: 465 # for SSL (uncomment if using port 465)
    default-encoding: UTF-8


  #Jwt properties
jwt:
  secretKey: FC80F451C01186135C05853AED4FB52FCF8F4563E5A00FDEA7C406A3CAC8307B
  token-prefix: Bearer
  token-expiration-after-days: 14

verification:
  token:
    expiryTimeInMinuets: 60

  mail:
    from: onboarding@resend.dev
    subject: Email Verification

#
#/resendApiKey: re_JM9GyuYo_9r2MytmUUheXfKfLKfALPwFa
#
# SMTP server connection
#  spring.mail.host=smtp.yourmailserver.com  # SMTP server hostname
#  spring.mail.port=587                      # SMTP server port (587 for TLS, 465 for SSL)
#  spring.mail.username=your-email@example.com  # Login username
#  spring.mail.password=your-email-password     # Login password
#
#  # Additional JavaMail properties
#  spring.mail.properties.mail.smtp.auth=true          # Enable authentication
#  spring.mail.properties.mail.smtp.starttls.enable=true  # Enable STARTTLS
#  spring.mail.properties.mail.debug=true             # Enable debug output